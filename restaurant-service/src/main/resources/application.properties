spring.application.name=restaurant-service
spring.cloud.config.uri=http://localhost:8888
spring.config.import=optional:configserver:http://localhost:8888
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# ===== CIRCUIT BREAKER CONFIG =====
resilience4j.circuitbreaker.instances.restaurantService.register-health-indicator=true
resilience4j.circuitbreaker.instances.restaurantService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.restaurantService.sliding-window-size=10
resilience4j.circuitbreaker.instances.restaurantService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.restaurantService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.restaurantService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.restaurantService.minimum-number-of-calls=5

# ===== RETRY CONFIG (OPTIONAL) =====
resilience4j.retry.instances.restaurantService.max-attempts=3
resilience4j.retry.instances.restaurantService.wait-duration=500ms

# ===== TIMEOUT CONFIG (OPTIONAL) =====
resilience4j.timelimiter.instances.restaurantService.timeout-duration=2s


